{"ast":null,"code":"var _jsxFileName = \"/home/iassureit/Greisch/greisch/webApp/admin/src/admin/Reports/YearlyReport.js\";\nimport React, { Component } from 'react';\nimport IAssureTable from \"../../coreAdmin/IAssureTable/IAssureTable.jsx\";\nexport default class YearlyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"reportData\": [],\n      \"twoLevelHeader\": this.props.twoLevelHeader,\n      \"tableHeading\": this.props.tableHeading,\n      \"tableObjects\": this.props.tableObjects,\n      \"tableDatas\": this.props.tableDatas,\n      \"startRange\": 0,\n      \"limitRange\": 10\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.dataTableList();\n    this.setState({\n      tableData: this.state.tableDatas.slice(this.state.startRange, this.state.limitRange)\n    });\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.reportData) {\n      this.setState({\n        reportData: nextProps.reportData\n      });\n    }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  currentyear() {\n    // var yearSession = Session.get('selectedYear');\n    // if(yearSession){\n    // \tvar currentYear = yearSession;\n    // }else{\n    // \tvar today = new Date();\n    //        var currentYear = today.getFullYear();\n    // \tSession.set(\"selectedYear\",currentYear);\n    // }\n    var d = new Date();\n    var currentYear = d.getFullYear();\n    return currentYear;\n  }\n\n  previousYear(event) {// event.preventDefault();\n    // var selectedYear = $(\".inputyearlyValue\").val();\n    // var newYear = moment(selectedYear).subtract(1,'years').format('YYYY');\n    // Session.set('selectedYear', newYear);\n  }\n\n  nextYear(event) {// event.preventDefault();\n    // var selectedYear = $(\".inputyearlyValue\").val();\n    // var newYear = moment(selectedYear).add(1,'years').format('YYYY');\n    // Session.set('selectedYear', newYear);\n  }\n\n  dataTableList() {// var yearFromSess = Session.get(\"selectedYear\");\n    //       var thisYear = yearFromSess;\n    //       var yearDateStart = new Date(\"1/1/\" + thisYear);\n    //       var yearDateEnd = new Date (yearDateStart.getFullYear(), 11, 31);\n    // var reportData = [];\n    //       if(this.props.selectedCategory){\n    //           if(this.props.selectedSubCategory){\n    //               reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //           }else{\n    //               reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n    //           }\n    //       }else{\n    //           reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n    //       }\n    //       this.setState({\n    //           reportData : reportData\n    //       });\n  }\n\n  getData(startRange, limitRange) {\n    this.setState({\n      tableData: this.state.tableDatas.slice(parseInt(startRange), parseInt(limitRange))\n    }, () => {\n      console.log('tableData', this.state.tableData);\n    });\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    console.log(searchText, startRange, limitRange);\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    if (!this.props.loading) {\n      return React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sales-report-main-class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"reports-select-date-boxmain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"reports-select-date-boxsec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"reports-select-date-Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Yearly Reports\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.previousYear.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-left\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        onChange: this.handleChange,\n        value: this.currentyear(),\n        name: \"inputyearlyValue\",\n        type: \"text\",\n        className: \"inputyearlyValue reportsDateRef form-control\",\n        placeholder: \"\",\n        \"aria-label\": \"Brand\",\n        \"aria-describedby\": \"basic-addon1\",\n        ref: \"inputyearlyValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: this.nextYear.bind(this),\n        className: \"commonReportArrowPoiner input-group-addon\",\n        id: \"basic-addon1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-chevron-circle-right\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"report-list-downloadMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(IAssureTable, {\n        completeDataCount: this.state.tableDatas.length,\n        twoLevelHeader: this.state.twoLevelHeader,\n        editId: this.state.editSubId,\n        getData: this.getData.bind(this),\n        tableHeading: this.state.tableHeading,\n        tableData: this.state.tableData,\n        tableObjects: this.state.tableObjects,\n        getSearchText: this.getSearchText.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg loaderDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"ldrImageforbulk\",\n        src: \"/images/loadersglms.gif\",\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }\n\n} // export default YearlyListContainer = withTracker(props =>{\n//     var yearFromSess = Session.get(\"selectedYear\");\n//     var thisYear = yearFromSess;\n//     var yearDateStart = new Date(\"1/1/\" + thisYear);\n//     var yearDateEnd = new Date (yearDateStart.getFullYear(), 11, 31);\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n//     return{\n//         loading,\n//         reportData,\n//     };\n// })(CategoryWiseReportsYearlyList);","map":{"version":3,"sources":["/home/iassureit/Greisch/greisch/webApp/admin/src/admin/Reports/YearlyReport.js"],"names":["React","Component","IAssureTable","YearlyReport","constructor","props","state","twoLevelHeader","tableHeading","tableObjects","tableDatas","handleChange","bind","componentDidMount","dataTableList","setState","tableData","slice","startRange","limitRange","componentWillReceiveProps","nextProps","reportData","event","preventDefault","target","name","value","currentyear","d","Date","currentYear","getFullYear","previousYear","nextYear","getData","parseInt","console","log","getSearchText","searchText","render","loading","length","editSubId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IAssureTable         from \"../../coreAdmin/IAssureTable/IAssureTable.jsx\";\nexport default class YearlyReport extends Component{\n\tconstructor(props){\n        super(props);\n        this.state = {\n            \"reportData\": [],\n            \"twoLevelHeader\"    : this.props.twoLevelHeader,\n            \"tableHeading\"      : this.props.tableHeading,\n            \"tableObjects\"      : this.props.tableObjects,\n            \"tableDatas\"        : this.props.tableDatas,\n            \"startRange\"        : 0,\n            \"limitRange\"        : 10\n            \n        }\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n\n    componentDidMount(){\n        this.dataTableList();\n        this.setState({\n            tableData : this.state.tableDatas.slice(this.state.startRange, this.state.limitRange),\n        });\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.reportData){\n            this.setState({\n                reportData : nextProps.reportData\n            });\n        }\n    }\n    handleChange(event){\n        event.preventDefault();\n       const target = event.target;\n       const name = target.name;\n\n       this.setState({\n           [name] : event.target.value,\n       });\n   }\n\n\n    currentyear(){\n\t\t// var yearSession = Session.get('selectedYear');\n\t\t// if(yearSession){\n\t\t// \tvar currentYear = yearSession;\n\t\t// }else{\n\t\t// \tvar today = new Date();\n\t //        var currentYear = today.getFullYear();\n\t\t// \tSession.set(\"selectedYear\",currentYear);\n\t\t// }\n    var d = new Date();\n    var currentYear = d.getFullYear();\n    return currentYear;\n\t}\n\n\tpreviousYear(event){\n\t\t// event.preventDefault();\n\t\t// var selectedYear = $(\".inputyearlyValue\").val();\n\t\t// var newYear = moment(selectedYear).subtract(1,'years').format('YYYY');\n\t\t// Session.set('selectedYear', newYear);\n\t}\n\n\tnextYear(event){\n\t\t// event.preventDefault();\n\t\t// var selectedYear = $(\".inputyearlyValue\").val();\n\t\t// var newYear = moment(selectedYear).add(1,'years').format('YYYY');\n\t\t// Session.set('selectedYear', newYear);\n\n    }\n    \n\n    dataTableList(){\n\t\t// var yearFromSess = Session.get(\"selectedYear\");\n        \n  //       var thisYear = yearFromSess;\n  //       var yearDateStart = new Date(\"1/1/\" + thisYear);\n  //       var yearDateEnd = new Date (yearDateStart.getFullYear(), 11, 31);\n\n\t\t// var reportData = [];\n  //       if(this.props.selectedCategory){\n  //           if(this.props.selectedSubCategory){\n  //               reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory, subCategory: this.props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n  //           }else{\n  //               reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: this.props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n  //           }\n  //       }else{\n  //           reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n  //       }\n  //       this.setState({\n  //           reportData : reportData\n  //       });\n    }\n    getData(startRange, limitRange){\n        this.setState({\n            tableData : this.state.tableDatas.slice(parseInt(startRange), parseInt(limitRange)),\n        },()=>{\n            console.log('tableData',this.state.tableData);\n        });\n    }\n    getSearchText(searchText, startRange, limitRange){\n        console.log(searchText, startRange, limitRange);\n        this.setState({\n            tableData : []\n        });\n    }\n   \n    render(){\n        if(!this.props.loading){\n            return( \n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div className=\"sales-report-main-class\">\n                        <div className=\"reports-select-date-boxmain\">\n                            <div className=\"reports-select-date-boxsec\">\n                                <div className=\"reports-select-date-Title\">Yearly Reports</div>\n                                <div className=\"input-group\">\n                                    <span onClick={this.previousYear.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-left\" aria-hidden=\"true\"></i></span>\n                                    <input onChange={this.handleChange} value={this.currentyear()} name=\"inputyearlyValue\" type=\"text\" className=\"inputyearlyValue reportsDateRef form-control\" placeholder=\"\" aria-label=\"Brand\" aria-describedby=\"basic-addon1\" ref=\"inputyearlyValue\"  />\n                                    <span onClick={this.nextYear.bind(this)} className=\"commonReportArrowPoiner input-group-addon\" id=\"basic-addon1\"><i className=\"fa fa-chevron-circle-right\" aria-hidden=\"true\"></i></span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"report-list-downloadMain\">\n                            <IAssureTable \n                                completeDataCount={this.state.tableDatas.length}\n                                twoLevelHeader={this.state.twoLevelHeader} \n                                editId={this.state.editSubId} \n                                getData={this.getData.bind(this)} \n                                tableHeading={this.state.tableHeading} \n                                tableData={this.state.tableData} \n                                tableObjects={this.state.tableObjects}\n                                getSearchText={this.getSearchText.bind(this)}/>\n                        </div>\n                    </div>\n                \n                    \n                </div>\n            );\n        }else{\n            return(\n                <div className=\"col-sm-12 col-xs-12 col-lg-8 col-lg-offset-4 col-md-12 loadingImg loaderDiv\"><img className=\"ldrImageforbulk\" src=\"/images/loadersglms.gif\" alt=\"loading\"/></div>\n            );\n        } \n    }\n}\n// export default YearlyListContainer = withTracker(props =>{\n//     var yearFromSess = Session.get(\"selectedYear\");\n        \n//     var thisYear = yearFromSess;\n//     var yearDateStart = new Date(\"1/1/\" + thisYear);\n//     var yearDateEnd = new Date (yearDateStart.getFullYear(), 11, 31);\n\n//     const reportHandle = Meteor.subscribe(\"OrdersData\");\n//     var reportData = [];\n//     if(props.selectedCategory){\n//         if(props.selectedSubCategory){\n//             reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory, subCategory: props.selectedSubCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }else{\n//             reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid',  \"products\": { $elemMatch: { category: props.selectedCategory}}}, {sort: {'createdAt': -1}}).fetch();\n//         }\n//     }else{\n//         reportData =  Orders.find({'createdAt':{$gte : yearDateStart, $lt : yearDateEnd }, 'status' : 'Paid'}, {sort: {'createdAt': -1}}).fetch();\n//     }\n//     const loading = !reportHandle.ready();\n//     return{\n//         loading,\n//         reportData,\n//     };\n// })(CategoryWiseReportsYearlyList);"]},"metadata":{},"sourceType":"module"}