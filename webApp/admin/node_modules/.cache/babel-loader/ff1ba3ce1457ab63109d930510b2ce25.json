{"ast":null,"code":"var _jsxFileName = \"/home/iassure/iAssureIT/node_react/wealthyvia/wealthyvia/webApp/admin/src/StoreManagement/bulkimageUpload/BulkProductImageUpload.js\";\n// import { Meteor }           from 'meteor/meteor';\n// import { Mongo }            from 'meteor/mongo';\n// import React, { Component } from 'react';\n// import { render }           from 'react-dom';\n// import TrackerReact         from 'meteor/ultimatejs:tracker-react';\n// import { createContainer }  from 'meteor/react-meteor-data';\n// import Validation           from 'react-validation';\n// import validator            from 'validator';\n// import {Tracker}            from 'meteor/tracker';\n// import { browserHistory }   from 'react-router';\n// import { ProductShop }      from '/imports/StoreManagement/product/addNewProduct/AddNewDispalyProduct/ProductMaster.js'\n// import {withTracker}        from 'meteor/react-meteor-data';\n// import swal from 'sweetalert';\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport ReactTable from \"react-table\"; // import IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\n\nimport swal from 'sweetalert';\nimport _ from 'underscore';\n\nclass BulkProductImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'allshopproductimages': [],\n      'notuploadedImages': []\n    };\n  }\n\n  componentDidMount() {// if(!$(\"link[href='/css/dashboard.css']\").length > 0){\n    //     var dashboardCss = document.createElement(\"link\");\n    //     dashboardCss.type=\"text/css\";\n    //     dashboardCss.rel =\"stylesheet\";\n    //     dashboardCss.href=\"/css/dashboard.css\";\n    //     document.head.append(dashboardCss);\n    // }\n    // Meteor.subscribe('projectSettings');\n    // this.bulkimagestracketr = Tracker.autorun(()=>{\n    //   var handle = Meteor.subscribe('productShopPublish');\n    //   var allproductImages = ProductShop.find({}).fetch();\n    //   if(allproductImages){\n    //       this.setState({\n    //         'allshopproductimages':allproductImages,\n    //       });\n    //   }else{\n    //     this.setState({\n    //       'allshopproductimages':[],\n    //     });\n    //   }\n    // });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      'allshopproductimages': nextProps.productData\n    });\n  }\n\n  bulkuplodaProductImages(event) {\n    event.preventDefault(); // Session.set('addProductImgsBulkUploadToS3Function',\"\");\n    // var filesupload = event.target.files;\n    // // // console.log(\"this: \",this);\n    // let self = this;\n    // var notUploadedImg = [];\n    // // var currentUpload = 0;\n    // for (var i = 0; i < filesupload.length; i++) {\n    //   // currentUpload = i;\n    //   if (event.currentTarget.files[i]) {\n    //     var dataImg =event.currentTarget.files[i];\n    //     var fileName     = filesupload[i].name;\n    //     var splitFileName= fileName.split(\"-\");\n    //     var productCode  = splitFileName[0];\n    //     if((dataImg.type == \"image/jpeg\" || dataImg.type == \"image/png\")&&splitFileName.length==2){\n    //         addProductImgsBulkUploadToS3Function(filesupload[i],self,productCode);\n    //     } else {\n    //       notUploadedImg.push(fileName);\n    //     }\n    //   } \n    // }\n    // this.setState({\n    //   \"notuploadedImages\": notUploadedImg,\n    // });\n    //   $('.bulkuplodaProductImagesInp').val(\"\");\n  }\n\n  getUploadBulUSPercentage() {// var uploadProgressPercent = Session.get(\"addProductImgsBulkUploadToS3Function\");\n    // if(uploadProgressPercent){\n    //     var percentVal = parseInt(uploadProgressPercent);\n    //     if(percentVal){\n    //         var styleC = {\n    //             width:percentVal + \"%\",\n    //             display:\"block\",\n    //         }\n    //         var styleCBar = {\n    //             display:\"block\",\n    //             marginTop:5,\n    //         }\n    //     }\n    //     if(!percentVal){\n    //         var percentVal = 0;\n    //         var styleC = {\n    //             width:0 + \"%\",\n    //             display:\"none\",\n    //         }\n    //         var styleCBar = {\n    //             display:\"none\",\n    //             marginTop:5,\n    //         }\n    //     }\n    //     console.log('percentVal',percentVal);\n    //     if(percentVal == 100){\n    //       return(\n    //           <div></div>\n    //         );\n    //     }else{\n    //       return (\n    //         <div>\n    //             <div className=\"progress\"  style= {styleCBar}>\n    //                 <div className=\"progress-bar progress-bar-striped active\" role=\"progressbar\"\n    //               aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\" style= {styleC}>\n    //                 {percentVal} %\n    //                 </div>\n    //             </div>\n    //         </div>\n    //       );  \n    //     }          \n    // }\n  }\n\n  deleteproductImages(event) {\n    event.preventDefault(); // var imageUrl = $(event.currentTarget).attr('data-currentindex');\n    // var productId   = $(event.currentTarget).attr('data-productid');\n    // if(imageUrl && productId){\n    //   Meteor.call('deleteShopProductImage',productId,imageUrl);\n    // }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Product Image Bulk Upload\"), React.createElement(\"hr\", {\n      className: \"hr-head container-fluid row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"addRolesInWrap newTemplateForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row inputrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4 col-lg-offset-4 col-md-4 col-md-offset-4 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category imageuploadtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Upload Product Shop Images\"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control bulkuplodaProductImagesInp\",\n      multiple: true,\n      onChange: this.bulkuplodaProductImages.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.getUploadBulUSPercentage()))))), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 upldImgTextColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Image name must be saved in format \", React.createElement(\"span\", {\n      className: \"upldImgTextColor1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Your Product Code\"), \" - \", React.createElement(\"span\", {\n      className: \"upldImgTextColor2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Image Number for that product. \"), \"eg. Cubiscan150TS-1, Cubiscan150TS-2, Cubiscan200TS-1, ... etc.\"), React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.notuploadedImages.length > 0 ? React.createElement(\"div\", {\n      className: \"notBlkUplImgListOuter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"notBlkUplImgListTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Images not Uploaded\"), this.state.notuploadedImages.map((data, index) => {\n      return React.createElement(\"div\", {\n        className: \"notBlkUplImgList\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, data);\n    })) : \"\")), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"HRMSWrapper col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table iAssureITtable-bordered table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"tempTableHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"col-lg-1 umDynamicHeader srpadd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Sr no.\"), React.createElement(\"th\", {\n      className: \"col-lg-2 umDynamicHeader srpadd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Product Code\"), React.createElement(\"th\", {\n      className: \"col-lg-2 umDynamicHeader srpadd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      className: \"col-lg-7 umDynamicHeader srpadd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Images\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.allshopproductimages.map((data, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" \", index + 1, \"     \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \" \", data.productCode, \"    \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \" \", data.productName, \"    \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, data.productImage.length > 0 ? React.createElement(\"div\", {\n        className: \"deleteimagewrapper bulkimagebg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, data.productImage.map((imgdata, index) => {\n        return React.createElement(\"div\", {\n          className: \"col-lg-3 deleteImgBlkUpldCol-lg-3\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-times deleteImgBlkUpld\",\n          \"aria-hidden\": \"true\",\n          \"data-productid\": data._id,\n          \"data-currentindex\": imgdata,\n          onClick: this.deleteproductImages.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: imgdata,\n          className: \"img-thumbnail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"div\", {\n        className: \"bulkImgUpldNotShown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"No Images Available\")));\n    }))))))), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default BulkProductImageUpload; // = withTracker(props =>{\n//   const productHandle     = Meteor.subscribe(\"productShopPublish\");\n//   const productData       = ProductShop.find({},{fields:{productCode:1, productImage:1, productName:1}}).fetch();\n//   const loading1          = !productHandle.ready();\n// return{\n//   productData\n// };\n// })(BulkProductImageUpload);","map":{"version":3,"sources":["/home/iassure/iAssureIT/node_react/wealthyvia/wealthyvia/webApp/admin/src/StoreManagement/bulkimageUpload/BulkProductImageUpload.js"],"names":["React","Component","$","axios","ReactTable","swal","_","BulkProductImageUpload","constructor","props","state","componentDidMount","componentWillReceiveProps","nextProps","setState","productData","bulkuplodaProductImages","event","preventDefault","getUploadBulUSPercentage","deleteproductImages","render","bind","notuploadedImages","length","map","data","index","allshopproductimages","productCode","productName","productImage","imgdata","_id"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAmC,OAAnC;AACA,OAAOC,CAAP,MAAmC,QAAnC;AACA,OAAOC,KAAP,MAAmC,OAAnC;AACA,OAAOC,UAAP,MAAmC,aAAnC,C,CACA;;AACA,OAAOC,IAAP,MAAmC,YAAnC;AACA,OAAOC,CAAP,MAAmC,YAAnC;;AACA,MAAMC,sBAAN,SAAqCN,SAArC,CAA8C;AAC7CO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACX,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT,8BAAwB,EADf;AAET,2BAAoB;AAFX,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAClC,SAAKC,QAAL,CAAc;AACZ,8BAAuBD,SAAS,CAACE;AADrB,KAAd;AAGD;;AACDC,EAAAA,uBAAuB,CAACC,KAAD,EAAO;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CAE5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAED;;AAIDC,EAAAA,wBAAwB,GAAE,CACxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAKDC,EAAAA,mBAAmB,CAACH,KAAD,EAAO;AACxBA,IAAAA,KAAK,CAACC,cAAN,GADwB,CAExB;AACA;AAEA;AACA;AACA;AACD;;AAEHG,EAAAA,MAAM,G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","sourcesContent":["// import { Meteor }           from 'meteor/meteor';\n// import { Mongo }            from 'meteor/mongo';\n// import React, { Component } from 'react';\n// import { render }           from 'react-dom';\n// import TrackerReact         from 'meteor/ultimatejs:tracker-react';\n// import { createContainer }  from 'meteor/react-meteor-data';\n// import Validation           from 'react-validation';\n// import validator            from 'validator';\n// import {Tracker}            from 'meteor/tracker';\n// import { browserHistory }   from 'react-router';\n// import { ProductShop }      from '/imports/StoreManagement/product/addNewProduct/AddNewDispalyProduct/ProductMaster.js'\n// import {withTracker}        from 'meteor/react-meteor-data';\n// import swal from 'sweetalert';\n\n\nimport React, { Component }   from 'react';\nimport $                      from 'jquery';\nimport axios                  from 'axios';\nimport ReactTable             from \"react-table\";\n// import IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\nimport swal                   from 'sweetalert';\nimport _                      from 'underscore';\nclass BulkProductImageUpload extends Component{\n\tconstructor(props){\n        super(props);\n        this.state = {\n            'allshopproductimages': [],\n            'notuploadedImages':[],\n        }\n    }\n\n    componentDidMount() {\n        // if(!$(\"link[href='/css/dashboard.css']\").length > 0){\n        //     var dashboardCss = document.createElement(\"link\");\n        //     dashboardCss.type=\"text/css\";\n        //     dashboardCss.rel =\"stylesheet\";\n        //     dashboardCss.href=\"/css/dashboard.css\";\n        //     document.head.append(dashboardCss);\n        // }\n    \n        // Meteor.subscribe('projectSettings');\n\n        // this.bulkimagestracketr = Tracker.autorun(()=>{\n        //   var handle = Meteor.subscribe('productShopPublish');\n        //   var allproductImages = ProductShop.find({}).fetch();\n          \n        //   if(allproductImages){\n        //       this.setState({\n        //         'allshopproductimages':allproductImages,\n        //       });\n        //   }else{\n        //     this.setState({\n        //       'allshopproductimages':[],\n        //     });\n        //   }\n        // });\n\n    }\n    componentWillReceiveProps(nextProps){\n      this.setState({\n        'allshopproductimages':nextProps.productData,\n      });\n    }\n    bulkuplodaProductImages(event){\n      event.preventDefault();\n      // Session.set('addProductImgsBulkUploadToS3Function',\"\");\n      // var filesupload = event.target.files;\n      // // // console.log(\"this: \",this);\n      \n      // let self = this;\n      // var notUploadedImg = [];\n      // // var currentUpload = 0;\n      // for (var i = 0; i < filesupload.length; i++) {\n      //   // currentUpload = i;\n      \n      //   if (event.currentTarget.files[i]) {\n      //     var dataImg =event.currentTarget.files[i];\n\n      //     var fileName     = filesupload[i].name;\n      //     var splitFileName= fileName.split(\"-\");\n      //     var productCode  = splitFileName[0];\n\n      //     if((dataImg.type == \"image/jpeg\" || dataImg.type == \"image/png\")&&splitFileName.length==2){\n      //         addProductImgsBulkUploadToS3Function(filesupload[i],self,productCode);\n      //     } else {\n      //       notUploadedImg.push(fileName);\n      //     }\n      //   } \n      // }\n\n      \n      \n\n      // this.setState({\n      //   \"notuploadedImages\": notUploadedImg,\n      // });\n      //   $('.bulkuplodaProductImagesInp').val(\"\");\n      \n    }\n\n  \n\n    getUploadBulUSPercentage(){\n      // var uploadProgressPercent = Session.get(\"addProductImgsBulkUploadToS3Function\");\n      // if(uploadProgressPercent){\n      //     var percentVal = parseInt(uploadProgressPercent);\n      //     if(percentVal){\n              \n      //         var styleC = {\n      //             width:percentVal + \"%\",\n      //             display:\"block\",\n      //         }\n      //         var styleCBar = {\n      //             display:\"block\",\n      //             marginTop:5,\n      //         }\n      //     }\n      //     if(!percentVal){\n      //         var percentVal = 0;\n  \n      //         var styleC = {\n      //             width:0 + \"%\",\n      //             display:\"none\",\n      //         }\n      //         var styleCBar = {\n      //             display:\"none\",\n      //             marginTop:5,\n      //         }\n      //     }\n      //     console.log('percentVal',percentVal);\n      //     if(percentVal == 100){\n      //       return(\n      //           <div></div>\n      //         );\n      //     }else{\n      //       return (\n      //         <div>\n      //             <div className=\"progress\"  style= {styleCBar}>\n      //                 <div className=\"progress-bar progress-bar-striped active\" role=\"progressbar\"\n      //               aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\" style= {styleC}>\n      //                 {percentVal} %\n      //                 </div>\n      //             </div>\n      //         </div>\n      //       );  \n      //     }          \n      // }\n    }\n\n\n    \n\n    deleteproductImages(event){\n      event.preventDefault();\n      // var imageUrl = $(event.currentTarget).attr('data-currentindex');\n      // var productId   = $(event.currentTarget).attr('data-productid');\n     \n      // if(imageUrl && productId){\n      //   Meteor.call('deleteShopProductImage',productId,imageUrl);\n      // }\n    }\n    \n  render(){\n    return( \n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"formWrapper\">\n            <section className=\"content\">\n              <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\">\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\">\n                        Product Image Bulk Upload                      \n                     </div>\n                    <hr className=\"hr-head container-fluid row\"/>\n                  </div>\n                  <form className=\"addRolesInWrap newTemplateForm\">\n                    <div className=\"row inputrow\">\n                      <div className=\"col-lg-4 col-lg-offset-4 col-md-4 col-md-offset-4 col-sm-12 col-xs-12\">\n                        <div className=\"form-group\">\n                          <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category imageuploadtitle\">\n                            Upload Product Shop Images \n                          </label>\n                          <input type=\"file\" className=\"form-control bulkuplodaProductImagesInp\" multiple onChange ={this.bulkuplodaProductImages.bind(this)}/>\n                          <div>{this.getUploadBulUSPercentage()}</div>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                  <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 upldImgTextColor\">\n                      Image name must be saved in format <span className=\"upldImgTextColor1\">Your Product Code</span> - <span className=\"upldImgTextColor2\">Image Number for that product. </span>\n                      eg. Cubiscan150TS-1, Cubiscan150TS-2, Cubiscan200TS-1, ... etc.\n                    </div>\n                    <div className=\"col-lg-12\">\n                      {\n                        this.state.notuploadedImages.length > 0 ?\n\n                          <div className=\"notBlkUplImgListOuter\">\n                            <div className=\"notBlkUplImgListTitle\">\n                              Images not Uploaded\n                            </div>\n                            {\n                              this.state.notuploadedImages.map((data, index)=>{\n                                return (\n                                  <div className=\"notBlkUplImgList\" key={index}> \n                                    {data}\n                                  </div>\n                                );\n                              })\n                            }\n                          </div>\n\n                        :\n\n                        \"\"\n\n                      } \n                    </div>\n                  </div>\n                  <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                    <div className=\"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                      <div>\n                        <div className=\"HRMSWrapper col-lg-12\">\n                          <table className=\"table iAssureITtable-bordered table-striped table-hover\">\n                            <thead className=\"tempTableHeader\">\n                              <tr >\n                                <th className=\"col-lg-1 umDynamicHeader srpadd\">Sr no.</th>\n                                <th className=\"col-lg-2 umDynamicHeader srpadd\">Product Code</th>\n                                <th className=\"col-lg-2 umDynamicHeader srpadd\">Product Name</th>\n                                <th className=\"col-lg-7 umDynamicHeader srpadd\">Images</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {  \n                                this.state.allshopproductimages.map((data,index)=>{\n                                  return(\n                                    <tr key ={index}>\n                                      <td> {index+1}     </td>\n                                      <td> {data.productCode}    </td>\n                                      <td> {data.productName}    </td>\n                                      <td>\n                                      {\n                                        data.productImage.length > 0 ? \n                                          <div className=\"deleteimagewrapper bulkimagebg\">  \n                                            {  \n                                              data.productImage.map((imgdata,index)=>{\n                                                return(\n                                                  <div className=\"col-lg-3 deleteImgBlkUpldCol-lg-3\" key={index}>\n                                                    <i className=\"fa fa-times deleteImgBlkUpld\" aria-hidden=\"true\" data-productid={data._id} data-currentindex={imgdata} onClick={this.deleteproductImages.bind(this)}></i>\n                                                    <img src={imgdata} className=\"img-thumbnail\"/>\n                                                  </div>\n                                                );\n                                              })\n                                            }\n                                          </div>\n                                        :\n                                        <div className=\"bulkImgUpldNotShown\">\n                                          No Images Available\n                                        </div>\n                                      }\n                                      </td>\n                                    </tr> \n                                  )\n                                })\n                              }   \n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    {/*<IAssureTable \n                      tableHeading={this.state.tableHeading}\n                      twoLevelHeader={this.state.twoLevelHeader} \n                      dataCount={this.state.dataCount}\n                      tableData={this.state.tableData}\n                      getData={this.getData.bind(this)}\n                      tableObjects={this.state.tableObjects}\n                    />*/}\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>           \n    );\n  }\n}\nexport default BulkProductImageUpload ;\n// = withTracker(props =>{\n//   const productHandle     = Meteor.subscribe(\"productShopPublish\");\n//   const productData       = ProductShop.find({},{fields:{productCode:1, productImage:1, productName:1}}).fetch();\n//   const loading1          = !productHandle.ready();\n// return{\n//   productData\n// };\n// })(BulkProductImageUpload);"]},"metadata":{},"sourceType":"module"}